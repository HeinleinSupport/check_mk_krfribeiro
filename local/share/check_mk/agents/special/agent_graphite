#!/usr/bin/env python
# Graphite Check_MK Datasource Program
# Author : ricardo.ribeiro@axians.com
# -*- coding: utf-8 -*-

import requests
import json
import getopt
import sys

opt_host = None
opt_user = None
opt_pass = None
opt_values = None

def usage():
    sys.stderr.write("""Check_MK Graphite Collector
USAGE: agent_graphite [OPTIONS] HOST
       agent_graphite -h

ARGUMENTS:
  HOST                                      Host name or IP address of Graphite system

OPTIONS:
  -h, --help                                Show this help message and exit
  -u USER, --user USER                      Username for Graphite login (if used)
  -p PASSWORD, --password PASSWORD          Password for Graphite login (if used)
  -v VALUE,VALUE, --values VALUE,VALUE      Values to fetch from Graphite system.
                                            Example values:     MyMetric.*.CPU_Usage.usage
                                                                MyMetric.*
                                                                MyOtherMetric.MyHost.*
                                                                (...)
""")

short_options = "hh:u:p:v:"
long_options = [ "help", "user=", "password=", "values=" ]

try:
    opts, args = getopt.getopt( sys.argv[1:], short_options, long_options )
except getopt.GetoptError, err:
    sys.stderr.write("%s\n" % err)
    sys.exit(1)

for opt, arg in opts:
        if opt in ['-h', '--help']:
            usage()
            sys.exit(0)
        elif opt in ["-u", "--user"]:
            opt_user = arg
        elif opt in ["-p", "--password"]:
            opt_password = arg
        elif opt in ["-v", "--values"]:
            opt_values = arg.split(",")
        elif not opt:
            usage()
            sys.exit(0)

if len(args) == 1:
    opt_host = args[0]
elif not args:
    sys.stderr.write("ERROR: No host given.\n")
    sys.exit(1)
else:
    sys.stderr.write("ERROR: Please specify exactly one host.\n")
    sys.exit(1)

if not opt_values:
    sys.stderr.write("ERROR: No host given.\n")
    sys.exit(1)

def composeGraphiteURL(metric, graphite_hostname):
        graphite_url = "http://%s/render/?target=summarize(%s,'1hour','last')&from=-1h&format=json" % (graphite_hostname, metric)
        return graphite_url

def getGraphiteData(metric):
        url = composeGraphiteURL(metric,args[0])
        r = requests.get(url)
        return r.json()

try:
        sys.stdout.write("<<<graphite_data>>>\n")
        for value in opt_values:
                if len(value.split(' ')) > 2:
                        sys.stderr.write("ERROR: Please specify --values = metric metric_type or just --values = metric.\n")
                        sys.exit(1)
                if len(value.split(' ')) == 1:
                        m_type = "count"
                else:
                        m_type = value.split(' ')[1]
                metric = value.split(' ')[0]
                graphite_data = (getGraphiteData(metric))
                if graphite_data:
                        for item in graphite_data:
                                metric_name = item['tags']['name']
                                metric_value = item['datapoints'][-1][0]

                                if metric_value == None:
                                        state = 2
                                else:
                                        state = 0

                                print("%s %s %s %s") % (metric_name , metric_value, state, m_type)
except:
        sys.stderr.write("Failed")
