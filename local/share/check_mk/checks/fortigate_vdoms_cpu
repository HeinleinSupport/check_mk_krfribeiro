#!/usr/bin/env python
# Author : ricardoftribeiro@gmail.com @krfribeiro
# -*- coding: utf-8 -*-
# Fortinet Firewalls Virtual Domain CPU Usage
#
# fgVdTable
#
# snmpwalk -On -v2c -c <COMMUNITY> <IP> .1.3.6.1.4.1.12356.101.3.2.1.1
#
#  .1.3.6.1.4.1.12356.101.3.2.1.1.2 Virtual Domain Name
#  .1.3.6.1.4.1.12356.101.3.2.1.1.5 Virtual Domain CPU Usage

factory_settings["fortigate_vdom_cpu_default_levels"] = {
    "cpulevels"                 :       (90,95),
}

def inventory_fortigate_vdoms_cpu(info):
    inventory = []
    for line in info:
        inventory.append((line[0],fortigate_vdom_cpu_default_levels))
    return inventory

def check_fortigate_vdoms_cpu(item, params, info):
    for line in info:
       if line[0] == item:
           global g_counters
           warn, crit = params.get("cpulevels")
           perfdata = []
           cpu_usage = int(line[1])
           for dir, value in [ ('CPUUsage', int(line[1])) ]:
               perfdata.append(( dir, saveint(value) ))
           if cpu_usage >= crit:
               return (2, "CRIT - Virtual Domain CPU is %s %% used" % cpu_usage , perfdata)
           elif cpu_usage >= warn:
               return (1, "WARN - Virtual Domain CPU is %s %% used" % cpu_usage , perfdata)
           else:
               return (0, "OK - Virtual Domain CPU is %s %% used" % cpu_usage , perfdata)
    return (3, "UNKNOWN - Virtual Domain %s not found in SNMP output" % item)

check_info["fortigate_vdoms_cpu"] = {
    "check_function"        : check_fortigate_vdoms_cpu,
    "inventory_function"    : inventory_fortigate_vdoms_cpu,
    "service_description"   : "Virtual Domain CPU - %s",
    "has_perfdata":         True,
    "group"                 : "fortigate_vdoms_cpu",
    "default_levels_variable" : "fortigate_vdom_cpu_default_levels",
    "snmp_info"             : ( ".1.3.6.1.4.1.12356.101.3.2.1.1", [ "2", "5" ] ) }
